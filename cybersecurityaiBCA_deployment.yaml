apiVersion: apps/v1
kind: Deployment
metadata:
  name: cybersecurityai
  namespace: cybersecuritybca
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cybersecurityai
  template:
    metadata:
      labels:
        app: cybersecurityai
    spec:
      hostNetwork: true
      #hostAliases:
      #- ip: "192.168.1.30"
      #  hostnames:
      #  - nfshaserver
      volumes:
      - name: storage
        nfs:
          server: "192.168.1.30"
          path: "/nfs-cybersecurity" # "nfs-cybersecurity" folder must exist inside "/exports" directory of NFS server
        #persistentVolumeClaim:
        #  claimName: storage-claim
      - name: etc-localtime
        hostPath:
          path: /etc/localtime
          type: File
          #type: FileOrCreate
      serviceAccountName: default
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                 matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - cybersecurityai
                topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - k8sbiai2
      terminationGracePeriodSeconds: 20
      restartPolicy: Always
      containers:
      - image: registry.thinklabs.com.vn:5000/cybersecurityai:bca
        #imagePullPolicy: IfNotPresent
        imagePullPolicy: Always
        name: cybersecurityai
        ports:
        - name: http
          containerPort: 4002
        volumeMounts:
        - mountPath: /etc/localtime
          name: etc-localtime
        - mountPath: /app/public/files
          name: storage
        securityContext:
          #allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
          #capabilities:
          #  drop:
          #  - ALL
          #  add:
          #  - NET_BIND_SERVICE
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "4002"
